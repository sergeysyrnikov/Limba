# Generated by Django 3.2.7 on 2021-09-17 12:13

import Main.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(default='', max_length=30, verbose_name='Полное имя отдела')),
                ('datetime', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'departments',
            },
        ),
        migrations.CreateModel(
            name='MainTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cols_subtasks', models.IntegerField(default=0, null=True, verbose_name='Колличество подзадач')),
                ('task_name', models.CharField(max_length=30, verbose_name='Заголовок')),
                ('full_link', models.CharField(max_length=50, verbose_name='Путь до задачи')),
                ('date_finished', models.DateField(blank=True, null=True, verbose_name='Дата окончания задачи')),
                ('about', models.TextField(default='', max_length=200, verbose_name='Подробности')),
                ('location', models.CharField(default='', max_length=100, verbose_name='Местоположение')),
                ('is_active', models.BooleanField(default=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'maintasks',
            },
        ),
        migrations.CreateModel(
            name='SubTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.CharField(max_length=30, verbose_name='Заголовок')),
                ('full_link', models.CharField(max_length=50, verbose_name='Путь до задачи')),
                ('date_finished', models.DateField(blank=True, null=True, verbose_name='Дата окончания задачи')),
                ('about', models.TextField(default='', max_length=200, verbose_name='Подробности')),
                ('location', models.CharField(default='', max_length=100, verbose_name='Местоположение')),
                ('is_active', models.BooleanField(default=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'subtasks',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserAdditionalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abbreviation', models.CharField(default='', max_length=3, verbose_name='Аббревиатура ФИО')),
                ('position_worker', models.CharField(choices=[('0', 'Администратор'), ('1', 'Руководитель проектов'), ('2', 'Начальник отдела'), ('3', 'Начальник участка'), ('4', 'Прораб'), ('5', 'Монтажник'), ('6', 'Инженер')], default=6, max_length=1, verbose_name='Должность работника')),
                ('type_user', models.DecimalField(decimal_places=0, default=2, max_digits=1, verbose_name='Тип пользователя')),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_info', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_info',
            },
        ),
        migrations.CreateModel(
            name='SubTaskComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(default='', max_length=100, verbose_name='Комментарий')),
                ('image', models.ImageField(blank=True, null=True, upload_to=Main.models.upload_path_sub, verbose_name='Фотография')),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('creator_comment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='creator_subcomment', to=settings.AUTH_USER_MODEL)),
                ('subtask', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subtask_comment', to='Main.subtask')),
            ],
            options={
                'db_table': 'subtask_comment',
            },
        ),
        migrations.AddField(
            model_name='subtask',
            name='connected_workers',
            field=models.ManyToManyField(related_name='workers_sub', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='subtask',
            name='executor_task',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='executor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='subtask',
            name='maintask',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='maintask', to='Main.maintask'),
        ),
        migrations.CreateModel(
            name='SubDepartmentObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(default='', max_length=30, verbose_name='Полное имя подобъекта')),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='creator_subdepartment', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='department', to='Main.department')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_executor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'subdepartment_objects',
                'unique_together': {('department', 'fullname')},
            },
        ),
        migrations.CreateModel(
            name='Object',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.DecimalField(decimal_places=0, max_digits=3, null=True, unique=True, verbose_name='Код объекта')),
                ('shortname', models.CharField(default='', max_length=8, unique=True, verbose_name='Сокращённое имя объекта')),
                ('fullname', models.CharField(default='', max_length=30, verbose_name='Полное имя объекта')),
                ('supervisor', models.CharField(default='', max_length=30, verbose_name='Руководитель проекта')),
                ('chief', models.CharField(default='', max_length=30, verbose_name='Начальник участка')),
                ('group_number', models.DecimalField(decimal_places=0, max_digits=5, null=True, unique=True, verbose_name='Номер проектной группы')),
                ('date_finished', models.DateField(blank=True, null=True, verbose_name='Дата сдачи объекта')),
                ('date_start_document', models.DateField(blank=True, null=True, verbose_name='Дата создания ТУ Электоснабжение')),
                ('date_finished_document', models.DateField(blank=True, null=True, verbose_name='Дата окончания ТУ Электоснабжение')),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('connected_workers', models.ManyToManyField(related_name='workers_object', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_limba', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'objects',
            },
        ),
        migrations.CreateModel(
            name='MainTaskComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(default='', max_length=100, verbose_name='Комментарий')),
                ('image', models.ImageField(blank=True, null=True, upload_to=Main.models.upload_path_main, verbose_name='Фотография')),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('creator_comment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='creator_maincomment', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='maintask_comment', to='Main.maintask')),
            ],
            options={
                'db_table': 'maintask_comment',
            },
        ),
        migrations.AddField(
            model_name='maintask',
            name='connected_workers',
            field=models.ManyToManyField(related_name='workers_main', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='maintask',
            name='creator_task',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='creator_task', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='maintask',
            name='executor_task',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='executor_task', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='maintask',
            name='subdepartment_object',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='department_object', to='Main.subdepartmentobject'),
        ),
        migrations.CreateModel(
            name='ImageSubTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to=Main.models.upload_path_sub, verbose_name='Фотография')),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('subtask', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subtask_img', to='Main.subtask')),
            ],
            options={
                'db_table': 'subimage',
            },
        ),
        migrations.CreateModel(
            name='ImageMain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to=Main.models.upload_path_main, verbose_name='Фотография')),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('task', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='maintask_img', to='Main.maintask')),
            ],
            options={
                'db_table': 'imagemain',
            },
        ),
        migrations.AddField(
            model_name='department',
            name='creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='creator_department', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='department',
            name='object_name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='object', to='Main.object'),
        ),
        migrations.AddField(
            model_name='department',
            name='user_assign',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_assign', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='department',
            unique_together={('object_name', 'fullname')},
        ),
    ]
